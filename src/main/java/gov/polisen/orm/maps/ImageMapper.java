package gov.polisen.orm.maps;

import gov.polisen.orm.clients.ImageSqlProvider;
import gov.polisen.orm.examples.ImageExample;
import gov.polisen.orm.models.Image;
import java.util.List;
import org.apache.ibatis.annotations.Arg;
import org.apache.ibatis.annotations.ConstructorArgs;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.type.JdbcType;

public interface ImageMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table images
	 * @mbggenerated  Thu Apr 03 15:37:03 CEST 2014
	 */
	@SelectProvider(type = ImageSqlProvider.class, method = "countByExample")
	int countByExample(ImageExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table images
	 * @mbggenerated  Thu Apr 03 15:37:03 CEST 2014
	 */
	@Insert({ "insert into images (id, author, ", "path)",
			"values (#{id,jdbcType=INTEGER}, #{author,jdbcType=INTEGER}, ",
			"#{path,jdbcType=VARCHAR})" })
	int insert(Image record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table images
	 * @mbggenerated  Thu Apr 03 15:37:03 CEST 2014
	 */
	@InsertProvider(type = ImageSqlProvider.class, method = "insertSelective")
	int insertSelective(Image record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table images
	 * @mbggenerated  Thu Apr 03 15:37:03 CEST 2014
	 */
	@SelectProvider(type = ImageSqlProvider.class, method = "selectByExample")
	@ConstructorArgs({
			@Arg(column = "id", javaType = Integer.class, jdbcType = JdbcType.INTEGER, id = true),
			@Arg(column = "author", javaType = Integer.class, jdbcType = JdbcType.INTEGER),
			@Arg(column = "path", javaType = String.class, jdbcType = JdbcType.VARCHAR) })
	List<Image> selectByExample(ImageExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table images
	 * @mbggenerated  Thu Apr 03 15:37:03 CEST 2014
	 */
	@Select({ "select", "id, author, path", "from images",
			"where id = #{id,jdbcType=INTEGER}" })
	@ConstructorArgs({
			@Arg(column = "id", javaType = Integer.class, jdbcType = JdbcType.INTEGER, id = true),
			@Arg(column = "author", javaType = Integer.class, jdbcType = JdbcType.INTEGER),
			@Arg(column = "path", javaType = String.class, jdbcType = JdbcType.VARCHAR) })
	Image selectByPrimaryKey(Integer id);
}